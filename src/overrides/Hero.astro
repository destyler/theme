---
import ContainerSection from '../components/ContainerSection.astro'
import LandingBackground from '../components/LandingBackground.astro'
import LinkButton from '../components/LinkButton.astro'

const { data } = Astro.locals.starlightRoute.entry
const { title = data.title, tagline, actions = [], description = data.description } = data.hero || {}
---

<ContainerSection>
  <div class="py-24 sm:py-32 md:py-40 relative mb-[8rem]">
    <LandingBackground />
    <div class="mx-auto px-4 sm:px-6 lg:px-8 gap-16 sm:gap-y-24 flex flex-col max-w-4xl">
      <div class="text-center relative z-[2]">
        <!-- version alert -->
        <div class="mb-10">
          <div
            class="inline-flex items-center text-sm px-4 py-1 bg-primary/20 group-data-[theme=dark]:bg-opacity-10 text-primary ring-1 ring-inset ring-primary/500 ring-opacity-25 group-data-[theme=dark]:ring-opacity-25 hover:bg-primary/35 transition-color relative font-medium rounded-full shadow-none cursor-pointer"
            set:html={tagline}
          >
          </div>

        </div>
        <!-- title -->
        <div
          class="text-5xl font-bold tracking-tight text-dark-900 group-data-[theme=dark]:text-white sm:text-7xl"
          set:html={title}
        >
        </div>
        <!-- desc -->
        <div
          class="mt-6 text-lg tracking-tight text-gray-600 group-data-[theme=dark]:text-gray-300"
          set:html={description}
        >

        </div>
        <!-- action -->
        {
          actions.length > 0 && (
            <div class="mt-10 flex flex-wrap gap-x-6 gap-y-3 justify-center">
              {actions.map(({ attrs: { class: className, ...attrs } = {}, icon, link: href, text, variant }) => (
                <LinkButton {href} {variant} class:list={[className]} {...attrs}>
                  {text}
                  {icon?.html && <Fragment set:html={icon.html} />}
                </LinkButton>
              ))}
            </div>
          )
        }
      </div>
    </div>
  </div>
</ContainerSection>
