---
import { AstroError } from 'astro/errors'
import { getRelativeLocaleUrl } from 'astro:i18n'
import userConfig from 'virtual:starlight-theme-destyler-config'
import starlightConfig from 'virtual:starlight/user-config'

const currentPath = Astro.url.pathname

const defaultLang = starlightConfig.defaultLocale?.lang || starlightConfig.defaultLocale?.locale || 'en'

export function getTranslation(translations: Record<string, string>, link: string, description: string) {
  const defaultTranslation = translations[defaultLang]

  if (!defaultTranslation) {
    throw new AstroError(
      `The ${description} for "${link}" must have a key for the default language "${defaultLang}".`,
      'Update the Starlight config to include a topic label for the default language.',
    )
  }

  let translation = defaultTranslation

  if (Astro.currentLocale) {
    translation = translations[Astro.currentLocale] ?? defaultTranslation
  }

  return translation
}
---

<nav class="text-sm leading-5 gap-4 items-center hidden xl:gap-6 xl:flex">
  {
    userConfig.navLinks?.map((nav) => {
      const absoluteLinkRegex = /^https?:\/\//

      const link
        = !absoluteLinkRegex.test(nav.link) && Astro.currentLocale
          ? getRelativeLocaleUrl(Astro.currentLocale, nav.link)
          : nav.link
      const label = typeof nav.label === 'string' ? nav.label : getTranslation(nav.label, nav.link, 'label')

      return (
        <a
          class:list={[{ active: currentPath === link }]}
          href={link}
          {...nav.attrs}
        >
          {label}
          {nav.badge && <span class="text-xs leading-4 font-normal leading-none no-underline text-black ml-2 px-1.5 py-0.5 rounded-md [background:#adfa1d]">{nav.badge}</span>}
        </a>
      )
    })
  }
</nav>

<style>

  .nav-bar a {
    text-decoration: none;
    transition-property: color, background-color, border-color, text-decoration-color, fill, stroke;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    transition-duration: 0.15s;
    color: hsl(var(--foreground) / 0.8);
  }

  .nav-bar a:hover {
    color: hsl(var(--foreground) / 0.8);
  }

  .nav-bar a.active {
    color: hsl(var(--foreground));
  }
</style>
