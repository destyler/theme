---
import type { MarkdownHeading } from 'astro'

interface TocItem extends MarkdownHeading {
  children: TocItem[]
}

interface Props {
  toc: TocItem[]
  depth?: number
  isMobile?: boolean
}

const { toc, depth = 0 } = Astro.props
---

<ul>
  {
    toc.map(heading => (
      <li>
        <a href={`#${heading.slug}`}>{heading.text}</a>
        {heading.children.length > 0 && <Astro.self toc={heading.children} depth={depth + 1} />}
      </li>
    ))
  }
</ul>

<style define:vars={{ depth }}>
  ul {
    --at-apply: list-none m-0 p-0;
  }
  li {
    --at-apply: pt-2 mt-0
  }

  a {
    --at-apply: no-underline text-muted-foreground inline-block [text-decoration:inherit];
  }

  a:hover {
    --at-apply: text-foreground
  }

  a[aria-current] {
    --at-apply: text-foreground
  }

  ul > li > ul {
    --pad-inline: 0.5rem;
    padding-inline: calc((1rem - var(--pad-inline)) / var(--depth) + var(--pad-inline)) var(--pad-inline);
  }
</style>
